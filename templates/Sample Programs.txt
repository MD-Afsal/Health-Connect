<html>
<head>
<link class="jsbin" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1/themes/base/jquery-ui.css" rel="stylesheet" type="text/css" />
<script class="jsbin" src="http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>
<script class="jsbin" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.0/jquery-ui.min.js"></script>
<meta charset=utf-8 />
<title>JS Bin</title>
<!--[if IE]>
<script src="http://goo.gl/r57ze"></script>
<![endif]-->
</head>
<body>
<input type='file' onchange="readURL(this);" />
<img id="blah" src="#" alt="your image" />
</body>
</html>

//input for the image
function readURL(input) {
  if (input.files && input.files[0]) {
    var reader = new FileReader();
    reader.onload = function (e) {
      $('#blah')
        .attr('src', e.target.result)
        .width(150)
        .height(200);
    };
    reader.readAsDataURL(input.files[0]);
  }
}


//preview the image
function previewFile() {
  var preview = document.querySelector('img');
  var file    = document.querySelector('input[type=file]').files[0];
  var reader  = new FileReader();

  reader.onloadend = function () {
    preview.src = reader.result;
  }

  if (file) {
    reader.readAsDataURL(file);
  } else {
    preview.src = "";
  }
}

<input type="file" onchange="previewFile()"><br>
<img src="" height="200" alt="Image preview...">



//python program to store the image
import mysql.connector

# Connect to your MySQL database
connection = mysql.connector.connect(
    host="your_host",
    user="your_user",
    password="your_password",
    database="your_database"
)
cursor = connection.cursor()

# Read the image file as binary
with open('path/to/your/image.jpg', 'rb') as file:
    image_data = file.read()

# Insert the image data into the database
query = "INSERT INTO your_table (image_column) VALUES (%s)"
cursor.execute(query, (image_data,))

# Commit the transaction
connection.commit()

# Close the connection
cursor.close()
connection.close()


//python program to retrive the image
import mysql.connector
from PIL import Image
from io import BytesIO

# Connect to the database
connection = mysql.connector.connect(
    host="your_host",
    user="your_user",
    password="your_password",
    database="your_database"
)
cursor = connection.cursor()

# Retrieve the image data from the database
query = "SELECT image_column FROM your_table WHERE your_condition"
cursor.execute(query)
image_data = cursor.fetchone()[0]

# Convert the binary data back to an image
image = Image.open(BytesIO(image_data))
image.show()

# Close the connection
cursor.close()
connection.close()

__________________________________________________________________________________


# app.py
from flask import Flask, render_template, request
import mysql.connector

app = Flask(__name__)

# MySQL connection
connection = mysql.connector.connect(
    host='your_mysql_host',
    user='your_mysql_user',
    password='your_mysql_password',
    database='your_database_name'
)

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/upload', methods=['POST'])
def upload():
    if 'image' in request.files:
        image = request.files['image']
        image_path = f"uploads/{image.filename}"
        image.save(image_path)

        cursor = connection.cursor()
        insert_query = 'INSERT INTO images (image_path) VALUES (%s)'
        cursor.execute(insert_query, (image_path,))
        connection.commit()
        cursor.close()

        return 'Image uploaded successfully!'
    return 'Image upload failed.'

if __name__ == '__main__':
    app.run(debug=True)



<!-- templates/index.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Upload</title>
</head>
<body>
    <h1>Image Upload</h1>
    <form action="/upload" method="POST" enctype="multipart/form-data">
        <input type="file" name="image" accept="image/*" required>
        <button type="submit">Upload</button>
    </form>
</body>
</html>
-----------------------------------------------
CREATE TABLE images (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    image_data MEDIUMBLOB
);

from flask import Flask, render_template, send_file
import mysql.connector

app = Flask(__name__)

# MySQL Configuration
db_config = {
    'host': 'your_mysql_host',
    'user': 'your_mysql_user',
    'password': 'your_mysql_password',
    'database': 'your_mysql_database'
}

# Establish MySQL connection
db = mysql.connector.connect(**db_config)


@app.route('/image/<int:image_id>')
def get_image(image_id):
    cursor = db.cursor(dictionary=True)
    query = "SELECT name, image_data FROM images WHERE id = %s"
    cursor.execute(query, (image_id,))
    image = cursor.fetchone()
    cursor.close()

    if image:
        return render_template('image.html', image=image)
    else:
        return "Image not found", 404

---
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Viewer</title>
</head>
<body>

    <h2>{{ image.name }}</h2>

    <img src="{{ url_for('serve_image', image_id=image.id) }}" alt="{{ image.name }}">

</body>
</html>

---
@app.route('/image/<int:image_id>/serve')
def serve_image(image_id):
    cursor = db.cursor(dictionary=True)
    query = "SELECT image_data FROM images WHERE id = %s"
    cursor.execute(query, (image_id,))
    image = cursor.fetchone()
    cursor.close()

    if image:
        return send_file(io.BytesIO(image['image_data']),
                         mimetype='image/jpeg', as_attachment=True,
                         download_name=f"{image_id}.jpg")
    else:
        return "Image not found", 404



------------------------------------------------------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Form Inputs</title>
</head>
<body>

    <form id="myForm">
        <label>
            <input type="radio" name="inputType" value="text" onclick="changeInputs('text')"> Text Input
        </label>
        <label>
            <input type="radio" name="inputType" value="number" onclick="changeInputs('number')"> Number Input
        </label>
        <br>
        
        <div id="inputContainer">
            <!-- Dynamic inputs will be inserted here -->
        </div>
    </form>

    <script>
        function changeInputs(inputType) {
            var inputContainer = document.getElementById('inputContainer');
            inputContainer.innerHTML = ''; // Clear previous inputs

            if (inputType === 'text') {
                inputContainer.innerHTML = '<label>Text Input: <input type="text" name="textInput"></label>';
            } else if (inputType === 'number') {
                inputContainer.innerHTML = '<label>Number Input: <input type="number" name="numberInput"></label>';
            }
            // You can add more conditions for other input types as needed
        }
    </script>

</body>
</html>


-----------------------------------------------
>>>>> Mysql Table <<<<<<<

1. tbl_login(id,username,email,password)
2. tbl_doctor_details(id, doc_name, doc_img, doc_img_path, category, district, city, address, hospital_name, phone, time_IN, time_OUT)
3. tbl_user_details(id, name, user_img, age, gender, blood_group, affected_with)
4. tbl_user_address(id, addr, city, district, state, country)
5. tbl_doctor_images(id, doc_pic1, doc_pic2, doc_pic3, doc_pic4, doc_pic5, doc_pic6)
6. tbl_user_medicalreport_images(id, rep1, rep2, rep3, rep4, rep5, rep6, rep7, rep8, rep9, rep10)
7. tbl_user_medicalbill_images(id, bill1, bill2, bill3, bill4, bill5, bill6, bill7, bill8, bill9, bill10)


DELIMITER //
CREATE TRIGGER after_user_login_id_insert
AFTER INSERT ON tbl_login
FOR EACH ROW
BEGIN
    INSERT INTO tbl_user_details(id) VALUES (NEW.id);
    INSERT INTO tbl_user_address(id) VALUES (NEW.id);
    INSERT INTO tbl_user_medicalbill_images(id) VALUES (NEW.id);
    INSERT INTO tbl_user_medicalreport_images(id) VALUES (NEW.id);
END;
//
DELIMITER ;

ALTER TABLE tbl_doctor_details ADD map_code varchar(1000);

update tbl_doctor_details set map_code = "<iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3943.6715578768817!2d77.73627257478573!3d8.722704731124955!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3b040d2d51748d55%3A0xea7b37bc9180ce96!2sSukumar%20dental%20Clinic!5e0!3m2!1sen!2sin!4v1709540192920!5m2!1sen!2sin" width="600" height="450" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
" where id = 2;